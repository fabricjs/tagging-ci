name: "🏷️"

on:
  pull_request:
    branches: [main]
    types:
      - labeled
      - unlabeled
      - opened
      - synchronize
      - reopened
  pull_request_review:
    types: [submitted, dismissed]

jobs:
  main-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ env.BASE_VERSION }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: main
      - name: base version
        run: echo "BASE_VERSION=$(jq -r '.version' package.json)" >> $GITHUB_ENV
  bump-version:
    name: bump version
    runs-on: ubuntu-latest
    needs: main-version
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: npm
      - run: npm ci
      - name: Bump Version
        id: inc-version
        uses: actions/github-script@v6
        env:
          # list of labels that block bumping the version
          STRICT_NO_RELEASE_LABELS: |
            norelease
          # list of labels that shouldn't bump the version by default
          # adding a release label overrides this configuration
          NO_RELEASE_LABELS: |
            CI/CD
            docs
          BASE_VERSION: ${{ needs.main-version.outputs.version }}
          PRERELEASE_TAG: beta
        with:
          result-encoding: string
          script: |
            const { bumpPRVersion } = await import('${{ github.workspace }}/scripts/versioning.mjs');
            const {
              STRICT_NO_RELEASE_LABELS: strictNoReleaseLabels,
              NO_RELEASE_LABELS: noReleaseLabels,
              BASE_VERSION: baseVersion,
              PRERELEASE_TAG: prereleaseTag
            }
            return bumpPRVersion(context, {
              labels: context.payload.pull_request.labels,
              strictNoReleaseLabels: strictNoReleaseLabels.split('\n'),
              noReleaseLabels: noReleaseLabels.split('\n'),
              baseVersion,
              prereleaseTag
            });
      - name: Commit & Push
        if: steps.inc-version.outputs.result
        run: |
          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com
          git add package.json
          git commit -m "v${{ steps.inc-version.outputs.result }}"
          git push
